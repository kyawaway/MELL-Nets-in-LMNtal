// test (lambda)

/////// 1
ax{ax_(A1),ax_(A2)},'?d'(A1,A3),'?w'(A4).
{
ax{ax_(B1),ax_(B2)},'?d'(B1,B3),'?w'(B4),'!'(B2,B5)
}.
'?c'({'?c_'(A3),'?c_'(B4)},C1).
'?c'({'?c_'(A4),'?c_'(B3)},C2).
tensor(B5,T1,D2),ax{ax_(T1),ax_(T2)}.
cut{cut_(A2),cut_(D2)}.

par(C2,T2,P1).
par(C1,P1,F).

{
ax{ax_(E1),ax_(E2)},'?d'(E1,E3),par(E3,E2,E4),'!'(E4,E5).

}.
tensor(E5,T3,D4),ax{ax_(T3),ax_(T4)}.
cut{cut_(F),cut_(D4)}.
f(T4).


//{ax{ax_(A1),ax_(A2)},par(A1,A2,A3),'!'(A3,A4)}.
//{ax{ax_(B1),ax_(B2)},par(B1,B2,B3),'!'(B3,B4)}.
//{
//  ax{ax_(C1),ax_(C2)},ax{ax_(C3),ax_(C4)},ax{ax_(C5),ax_(C6)},
//  tensor(C4,C5,C7),
//  '?d'(C7,C8),
//  cut{cut_(C2),cut_(C8)},
//  '?c'({'?c_'(C1),'?c_'(C3)},C9),
//  par(C9,C6,C10),
//  '!'(C10,C11)
//}.
//cut{cut_(C11),cut_(TTD1)}.
//
//tensor(A4,TA1,TA2),ax{ax_(TA1),ax_(TA3)}.
//'?d'(TA2,TD1).
//cut{cut_(TD1),cut_(B4)}.
//
//tensor(TA3,TTA1,TTA2),ax{ax_(TTA1),ax_(TTA3)}.
//'?d'(TTA2,TTD1).
//
//f(TTA3).


//'?w'(L13). {'?d'(L15,L17). '!'(par(L17,L16),L14). ax{ax_(L15). ax_(L16). }. }, cut{cut_(L13). cut_(L14). }. }.

{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


{
system_ruleset.
 switching_par_r@@
 par(A,B,AB) :- par(A,AB),v(B).
 
 switching_par_l@@
 par(A,B,AB) :- par(B,AB),v(A).
 
 switching_contraction@@
 '?c'({'?c_'(C1),'?c_'(C2)},X3) :- '?c'(C1,X3),v(C2).
 
 switching_box@@
 {'!'(X1,X2),$p[X1|*X]} :- $p[X2|*X]
}.


